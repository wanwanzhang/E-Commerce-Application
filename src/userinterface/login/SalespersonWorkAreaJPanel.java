/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.login;


import Business.EcoSystem;
import Business.UserAccount.UserAccount;
import Business.business.Order;
import Business.business.OrderItem;
import Business.business.Salesperson;

import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wanwan Zhang
 */
public class SalespersonWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private Order order;

    /**
     * Creates new form SalespersonWorkAreaJPanel
     */
    public SalespersonWorkAreaJPanel(JPanel userProcessContainer, EcoSystem business, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.userAccount = userAccount;
        Salesperson currentsalesperson = (Salesperson) userAccount.getPerson();
        txtsalesname.setText(currentsalesperson.getFirstname());
       
        populateTable();
        order = new Order();

    }

    public void populateTable() {

        DefaultTableModel dtm = (DefaultTableModel) tbsalesproduct1.getModel();
        dtm.setRowCount(0);
        try {
             
            for (Order o : business.getMasterordercatalog().getMasterorderlist()) {
                for (OrderItem oi : o.getOrderlist()) {
                    double commission = (oi.getCustomerprice() - oi.getProduct().getFloorprice()) * oi.getQuantity() * 0.1;
                    oi.setCommission(commission);
                    Object row[] = new Object[11];
                    row[0] = oi;
                    row[1] = oi.getProduct().getProductid();
                    row[2] = oi.getProduct().getFloorprice();
                    row[3] = oi.getProduct().getTargetprice();
                    row[4] = oi.getProduct().getCeilingprice();
                    row[5] = oi.getProduct().getAvail();
                    row[6] = oi.getCustomerprice();
                    row[7] = oi.getQuantity();
                    row[8] = oi.getStatus();
                    row[9] = oi.getCommission();
                    row[10] = o.getCust().getCustomerid();
                 //   row[11]= o.getSp().getSalespersonid();
                    
                    dtm.addRow(row);
                }
            
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Unable to display user account details");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbsalesproduct1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtsalesname = new javax.swing.JTextField();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("Sales Person Work Area");

        jButton1.setText("Deal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tbsalesproduct1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        tbsalesproduct1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Product ID", "FloorPrice", "TargetPrice", "CeilingPrice", "Avail", "CustomerPrice", "QuantityWanted", "TransactionStatus", "Commission", "CustomerID"
            }
        ));
        jScrollPane2.setViewportView(tbsalesproduct1);

        jLabel3.setText("SalesPerson User Name ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtsalesname, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 852, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(408, 408, 408)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1163, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtsalesname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 428, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addGap(286, 286, 286))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(121, 121, 121)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(341, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        int selectedRowCount = tbsalesproduct1.getSelectedRowCount();
        if (selectedRowCount <= 0) {
           JOptionPane.showMessageDialog(null, "You didn't select any rows from the orderItem table!");
            return;
        }

        int row = tbsalesproduct1.getSelectedRow();

        Salesperson currentsalesperson = (Salesperson) userAccount.getPerson();
        //most important !!!!!!!!    
        
        order.setSp(currentsalesperson);
        
        System.out.print(currentsalesperson.getSalespersonid());
        
        OrderItem oi = (OrderItem) tbsalesproduct1.getValueAt(row, 0);
        if (oi.getCustomerprice()<oi.getProduct().getFloorprice()){
            JOptionPane.showMessageDialog(null, "You can not deal this order as the price below floorprice!!");
            return;
        }else{
        oi.setStatus("Deal");
        int taq= currentsalesperson.getTotalaboveqty();
        
        if(oi.getCustomerprice()>oi.getProduct().getTargetprice()){
                                taq = taq +oi.getQuantity();
                                currentsalesperson.setTotalaboveqty(taq);
                                
                            
                            }
        int tbq = currentsalesperson.getTotalbelowqty();
        if(oi.getCustomerprice()<oi.getProduct().getTargetprice()){
                                tbq = tbq + oi.getQuantity();
                                currentsalesperson.setTotalbelowqty(tbq);
                                
                            }
              double commission = currentsalesperson.getTotalcommission();
              int totalqty =  currentsalesperson.getTotalqty();
                 totalqty=totalqty+oi.getQuantity();
                            commission = commission + oi.getCommission();
                            currentsalesperson.setTotalqty(totalqty);
                            currentsalesperson.setTotalcommission(commission);
                           
                            
                        //}
        }
        
        
        populateTable();
        //refreshOrderTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        int selectedRowCount = tbsalesproduct1.getSelectedRowCount();
        if (selectedRowCount <= 0) {
            JOptionPane.showMessageDialog(null, "You didn't select any rows from the orderItem table!");
            return;
        }

        int row = tbsalesproduct1.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Failed to retrive selected row");
            return;
        }

        OrderItem oi = (OrderItem) tbsalesproduct1.getValueAt(row, 0);
        oi.setStatus("Canceled");

        populateTable();
    }//GEN-LAST:event_jButton2ActionPerformed

    /*public void refreshOrderTable() {
        int rowCount = tbsalesproduct1.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) tbsalesproduct1.getModel()).removeRow(i);
       }
 for (Order o : business.getMasterordercatalog().getMasterorderlist()) {
        for (OrderItem oi : order.getOrderlist()) {
           double commission = (oi.getCustomerprice() - oi.getProduct().getFloorprice()) * oi.getQuantity() * 0.1;
           oi.setCommission(commission);
           Object row[] = new Object[12];
                    row[0] = oi;
                    row[1] = oi.getProduct().getProductid();
                    row[2] = oi.getProduct().getFloorprice();
                    row[3] = oi.getProduct().getTargetprice();
                    row[4] = oi.getProduct().getCeilingprice();
                    row[5] = oi.getProduct().getAvail();
                    row[6] = oi.getCustomerprice();
                    row[7] = oi.getQuantity();
                    row[8] = oi.getStatus();
                    row[9] = oi.getCommission();
                    row[10] = o.getCustomerid();
                    row[11]= o.getSalespersonid();

           ((DefaultTableModel) tbsalesproduct1.getModel()).addRow(row);
        }
   }
   
    }*/

    
        
        

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbsalesproduct1;
    private javax.swing.JTextField txtsalesname;
    // End of variables declaration//GEN-END:variables
}
